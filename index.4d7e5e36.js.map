{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState;\n        this.state = this.cloneState(this.initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"cloneState\",\n            value: function cloneState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"createRandomCell\",\n            value: function createRandomCell() {\n                var newField = [];\n                for(var x = 0; x < 4; x++){\n                    for(var y = 0; y < 4; y++)if (this.state[x][y] === 0) newField.push([\n                        x,\n                        y\n                    ]);\n                }\n                if (newField.length > 0) {\n                    var randomCellIndex = Math.floor(Math.random() * newField.length);\n                    var _newField_randomCellIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(newField[randomCellIndex], 2), x1 = _newField_randomCellIndex[0], y1 = _newField_randomCellIndex[1];\n                    this.state[x1][y1] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"combineCell\",\n            value: function combineCell(cells) {\n                var newCells = cells.filter(function(cell) {\n                    return cell !== 0;\n                });\n                for(var i = 0; i < newCells.length - 1; i++)if (newCells[i] === newCells[i + 1]) {\n                    newCells[i] *= 2;\n                    newCells[i + 1] = 0;\n                    this.score += newCells[i];\n                }\n                return newCells.filter(function(cell) {\n                    return cell !== 0;\n                });\n            }\n        },\n        {\n            key: \"rotateState\",\n            value: function rotateState(state) {\n                var rotatedState = [];\n                for(var y = 0; y < 4; y++){\n                    rotatedState[y] = [];\n                    for(var x = 3; x >= 0; x--)rotatedState[y].push(state[x][y]);\n                }\n                return rotatedState;\n            }\n        },\n        {\n            key: \"rotateStateBack\",\n            value: function rotateStateBack(state) {\n                var rotatedState = [];\n                for(var y = 0; y < 4; y++){\n                    rotatedState[y] = [];\n                    for(var x = 0; x < 4; x++)rotatedState[y].push(state[x][y]);\n                }\n                return rotatedState.reverse();\n            }\n        },\n        {\n            key: \"moveRowLeft\",\n            value: function moveRowLeft(row) {\n                var newRow = this.combineCell(row);\n                while(newRow.length < 4)newRow.push(0);\n                return newRow;\n            }\n        },\n        {\n            key: \"moveRowRight\",\n            value: function moveRowRight(row) {\n                var newRow = this.combineCell(row);\n                while(newRow.length < 4)newRow.unshift(0);\n                return newRow;\n            }\n        },\n        {\n            key: \"moveStateLeft\",\n            value: function moveStateLeft(state) {\n                var newState = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        newState.push(this.moveRowLeft(row));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return newState;\n            }\n        },\n        {\n            key: \"moveStateRight\",\n            value: function moveStateRight(state) {\n                var newState = [];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        newState.push(this.moveRowRight(row));\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return newState;\n            }\n        },\n        {\n            key: \"moveStateUp\",\n            value: function moveStateUp(state) {\n                var rotatedState = this.rotateState(state);\n                var rotatedMoveRight = this.moveStateRight(rotatedState);\n                return this.rotateStateBack(rotatedMoveRight);\n            }\n        },\n        {\n            key: \"moveStateDown\",\n            value: function moveStateDown(state) {\n                var rotatedState = this.rotateState(state);\n                var rotatedMoveLeft = this.moveStateLeft(rotatedState);\n                return this.rotateStateBack(rotatedMoveLeft);\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\") return;\n                var stateBeforeMove = this.cloneState(this.state);\n                this.checkGameStatus();\n                if (this.hasEmptyCell || this.canCombineCells) switch(direction){\n                    case \"left\":\n                        this.state = this.moveStateLeft(this.state);\n                        break;\n                    case \"right\":\n                        this.state = this.moveStateRight(this.state);\n                        break;\n                    case \"up\":\n                        this.state = this.moveStateUp(this.state);\n                        break;\n                    case \"down\":\n                        this.state = this.moveStateDown(this.state);\n                        break;\n                }\n                return !this.areStatesEqual(this.state, stateBeforeMove);\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var canMove = this.move(\"left\");\n                if (canMove) {\n                    this.createRandomCell();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var canMove = this.move(\"right\");\n                if (canMove) {\n                    this.createRandomCell();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var canMove = this.move(\"up\");\n                if (canMove) {\n                    this.createRandomCell();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var canMove = this.move(\"down\");\n                if (canMove) {\n                    this.createRandomCell();\n                    this.checkGameStatus();\n                }\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                if (!this.hasEmptyCell() && !this.canCombineCells()) {\n                    this.status = \"lose\";\n                    return;\n                }\n                for(var x = 0; x < 4; x++){\n                    for(var y = 0; y < 4; y++)if (this.state[x][y] === 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                }\n            }\n        },\n        {\n            key: \"hasEmptyCell\",\n            value: function hasEmptyCell() {\n                for(var x = 0; x < 4; x++)for(var y = 0; y < 4; y++){\n                    if (this.state[x][y] === 0) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"canCombineCells\",\n            value: function canCombineCells() {\n                for(var x = 0; x < 4; x++)for(var y = 0; y < 4; y++){\n                    if (y < 3 && this.state[x][y] === this.state[x][y + 1] || x < 3 && this.state[x][y] === this.state[x + 1][y]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"areStatesEqual\",\n            value: function areStatesEqual(state1, state2) {\n                for(var x = 0; x < 4; x++)for(var y = 0; y < 4; y++){\n                    if (state1[x][y] !== state2[x][y]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.createRandomCell();\n                    this.createRandomCell();\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                if (this.status === \"playing\" || this.status === \"lose\") this.state = this.cloneState(this.initialState);\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $197cd56b15c33885$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $197cd56b15c33885$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $197cd56b15c33885$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $197cd56b15c33885$var$game.moveDown();\n                break;\n        }\n        $197cd56b15c33885$var$updateState();\n    }\n});\nfunction $197cd56b15c33885$var$updateState() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var i = 0;\n    for(var x = 0; x < 4; x++)for(var y = 0; y < 4; y++){\n        var cell = $197cd56b15c33885$var$cells[i];\n        cell.className = \"field-cell\";\n        if (state[x][y] !== 0) {\n            cell.textContent = state[x][y];\n            cell.classList.add(\"field-cell--\".concat(state[x][y]));\n        } else cell.textContent = \"\";\n        i++;\n    }\n    document.querySelector(\".game-score\").textContent = $197cd56b15c33885$var$game.getScore();\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    else if (gameStatus === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.className === \"button restart\") $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$button.textContent = \"Restart\";\n    $197cd56b15c33885$var$button.className = \"button restart\";\n    $197cd56b15c33885$var$updateState();\n    document.querySelector(\".message-win\").classList.add(\"hidden\");\n    document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n});\n\n})();\n//# sourceMappingURL=index.4d7e5e36.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst button = document.querySelector('button');\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === 'playing') {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateState();\n  }\n});\n\nfunction updateState() {\n  const state = game.getState();\n  let i = 0;\n\n  for (let x = 0; x < 4; x++) {\n    for (let y = 0; y < 4; y++) {\n      const cell = cells[i];\n\n      cell.className = 'field-cell';\n\n      if (state[x][y] !== 0) {\n        cell.textContent = state[x][y];\n        cell.classList.add(`field-cell--${state[x][y]}`);\n      } else {\n        cell.textContent = '';\n      }\n\n      i++;\n    }\n  }\n\n  document.querySelector('.game-score').textContent = game.getScore();\n\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (gameStatus === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (button.className === 'button restart') {\n    game.restart();\n  }\n\n  game.start();\n\n  button.textContent = 'Restart';\n  button.className = 'button restart';\n\n  updateState();\n\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-start').classList.add('hidden');\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n    this.state = this.cloneState(this.initialState);\n  }\n\n  cloneState(state) {\n    return state.map((row) => [...row]);\n  }\n\n  createRandomCell() {\n    const newField = [];\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (this.state[x][y] === 0) {\n          newField.push([x, y]);\n        }\n      }\n    }\n\n    if (newField.length > 0) {\n      const randomCellIndex = Math.floor(Math.random() * newField.length);\n\n      const [x, y] = newField[randomCellIndex];\n\n      this.state[x][y] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  combineCell(cells) {\n    const newCells = cells.filter((cell) => cell !== 0);\n\n    for (let i = 0; i < newCells.length - 1; i++) {\n      if (newCells[i] === newCells[i + 1]) {\n        newCells[i] *= 2;\n        newCells[i + 1] = 0;\n        this.score += newCells[i];\n      }\n    }\n\n    return newCells.filter((cell) => cell !== 0);\n  }\n\n  rotateState(state) {\n    const rotatedState = [];\n\n    for (let y = 0; y < 4; y++) {\n      rotatedState[y] = [];\n\n      for (let x = 3; x >= 0; x--) {\n        rotatedState[y].push(state[x][y]);\n      }\n    }\n\n    return rotatedState;\n  }\n\n  rotateStateBack(state) {\n    const rotatedState = [];\n\n    for (let y = 0; y < 4; y++) {\n      rotatedState[y] = [];\n\n      for (let x = 0; x < 4; x++) {\n        rotatedState[y].push(state[x][y]);\n      }\n    }\n\n    return rotatedState.reverse();\n  }\n\n  moveRowLeft(row) {\n    const newRow = this.combineCell(row);\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  moveRowRight(row) {\n    const newRow = this.combineCell(row);\n\n    while (newRow.length < 4) {\n      newRow.unshift(0);\n    }\n\n    return newRow;\n  }\n\n  moveStateLeft(state) {\n    const newState = [];\n\n    for (const row of state) {\n      newState.push(this.moveRowLeft(row));\n    }\n\n    return newState;\n  }\n\n  moveStateRight(state) {\n    const newState = [];\n\n    for (const row of state) {\n      newState.push(this.moveRowRight(row));\n    }\n\n    return newState;\n  }\n\n  moveStateUp(state) {\n    const rotatedState = this.rotateState(state);\n\n    const rotatedMoveRight = this.moveStateRight(rotatedState);\n\n    return this.rotateStateBack(rotatedMoveRight);\n  }\n\n  moveStateDown(state) {\n    const rotatedState = this.rotateState(state);\n\n    const rotatedMoveLeft = this.moveStateLeft(rotatedState);\n\n    return this.rotateStateBack(rotatedMoveLeft);\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const stateBeforeMove = this.cloneState(this.state);\n\n    this.checkGameStatus();\n\n    if (this.hasEmptyCell || this.canCombineCells) {\n      switch (direction) {\n        case 'left':\n          this.state = this.moveStateLeft(this.state);\n          break;\n\n        case 'right':\n          this.state = this.moveStateRight(this.state);\n          break;\n\n        case 'up':\n          this.state = this.moveStateUp(this.state);\n          break;\n\n        case 'down':\n          this.state = this.moveStateDown(this.state);\n          break;\n      }\n    }\n\n    return !this.areStatesEqual(this.state, stateBeforeMove);\n  }\n\n  moveLeft() {\n    const canMove = this.move('left');\n\n    if (canMove) {\n      this.createRandomCell();\n      this.checkGameStatus();\n    }\n  }\n\n  moveRight() {\n    const canMove = this.move('right');\n\n    if (canMove) {\n      this.createRandomCell();\n      this.checkGameStatus();\n    }\n  }\n\n  moveUp() {\n    const canMove = this.move('up');\n\n    if (canMove) {\n      this.createRandomCell();\n      this.checkGameStatus();\n    }\n  }\n\n  moveDown() {\n    const canMove = this.move('down');\n\n    if (canMove) {\n      this.createRandomCell();\n      this.checkGameStatus();\n    }\n  }\n\n  checkGameStatus() {\n    if (!this.hasEmptyCell() && !this.canCombineCells()) {\n      this.status = 'lose';\n\n      return;\n    }\n\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (this.state[x][y] === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n      }\n    }\n  }\n\n  hasEmptyCell() {\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (this.state[x][y] === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  canCombineCells() {\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (\n          (y < 3 && this.state[x][y] === this.state[x][y + 1]) ||\n          (x < 3 && this.state[x][y] === this.state[x + 1][y])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  areStatesEqual(state1, state2) {\n    for (let x = 0; x < 4; x++) {\n      for (let y = 0; y < 4; y++) {\n        if (state1[x][y] !== state2[x][y]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n      this.createRandomCell();\n      this.createRandomCell();\n    }\n  }\n\n  restart() {\n    if (this.status === 'playing' || this.status === 'lose') {\n      this.state = this.cloneState(this.initialState);\n    }\n\n    this.status = 'idle';\n    this.score = 0;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","TypeError","score","status","state","cloneState","key","value","map","row","isArray","iter","Symbol","iterator","newField","x","y","push","randomCellIndex","Math","floor","random","_newField_randomCellIndex","_s","_e","_i","_arr","_n","_d","next","done","err","x1","y1","cells","newCells","filter","cell","rotatedState","reverse","newRow","combineCell","unshift","newState","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","moveRowLeft","return","moveRowRight","rotateState","rotatedMoveRight","moveStateRight","rotateStateBack","rotatedMoveLeft","moveStateLeft","direction","stateBeforeMove","checkGameStatus","hasEmptyCell","canCombineCells","moveStateUp","moveStateDown","areStatesEqual","move","createRandomCell","state1","state2","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$updateState","getState","className","textContent","classList","add","concat","getScore","gameStatus","getStatus","remove","addEventListener","e","moveLeft","moveRight","moveUp","moveDown","restart","start"],"version":3,"file":"index.4d7e5e36.js.map"}